//+------------------------------------------------------------------+
//|                                        SakhaBreak_V3_Original.mq5 |
//|                     Copyright 2025, margincall2 (Original Logic)  |
//|                                    https://github.com/margincall2  |
//+------------------------------------------------------------------+
#property copyright   "Copyright 2025, margincall2"
#property link       "https://github.com/margincall2"
#property version    "3.0"
#property strict
#property description "SakhaBreak V3 - Original Core Logic"

// Core Parameters
input double LotSize = 0.01;          // Lot Size
input int    StopLoss = 50;           // Stop Loss (points)
input int    TakeProfit = 100;        // Take Profit (points)
input int    MagicNumber = 2325;      // Magic Number

// Global Variables
int g_ticket = 0;
bool g_isTrading = false;
datetime g_lastBar = 0;
//+------------------------------------------------------------------+
//| Expert initialization function                                     |
//+------------------------------------------------------------------+
int OnInit()
{
    Print("ðŸš€ SakhaBreak V3 Original started");
    return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Expert tick function                                              |
//+------------------------------------------------------------------+
void OnTick()
{
    // Check for new bar
    datetime currentBar = iTime(Symbol(), PERIOD_CURRENT, 0);
    bool isNewBar = (currentBar != g_lastBar);
    
    if(isNewBar)
    {
        g_lastBar = currentBar;
        
        // Original Sakha Logic here
        CheckTradingSignals();
    }
    
    // Manage open positions
    if(g_isTrading)
    {
        ManagePositions();
    }
}
//+------------------------------------------------------------------+
//| Original Sakha Trading Logic                                      |
//+------------------------------------------------------------------+
void CheckTradingSignals()
{
    double ma20 = iMA(Symbol(), PERIOD_CURRENT, 20, 0, MODE_SMA, PRICE_CLOSE, 0);
    double ma50 = iMA(Symbol(), PERIOD_CURRENT, 50, 0, MODE_SMA, PRICE_CLOSE, 0);
    
    // Sakha Break Logic
    if(!g_isTrading)
    {
        // Buy condition
        if(ma20 > ma50)
        {
            g_ticket = OrderSend(Symbol(), OP_BUY, LotSize, Ask, 3, 
                               Ask - StopLoss*Point, Ask + TakeProfit*Point,
                               "SakhaBreak V3", MagicNumber, 0, clrGreen);
            if(g_ticket > 0) g_isTrading = true;
        }
        
        // Sell condition
        if(ma20 < ma50)
        {
            g_ticket = OrderSend(Symbol(), OP_SELL, LotSize, Bid, 3,
                               Bid + StopLoss*Point, Bid - TakeProfit*Point,
                               "SakhaBreak V3", MagicNumber, 0, clrRed);
            if(g_ticket > 0) g_isTrading = true;
        }
    }
}

//+------------------------------------------------------------------+
//| Position Management (Original)                                     |
//+------------------------------------------------------------------+
void ManagePositions()
{
    for(int i=0; i<OrdersTotal(); i++)
    {
        if(OrderSelect(i, SELECT_BY_POS) && OrderMagicNumber() == MagicNumber)
        {
            if(OrderProfit() > 0)  // In profit
            {
                // Simple trailing stop
                double newSL = OrderOpenPrice();
                if(OrderModify(OrderTicket(), OrderOpenPrice(), newSL, 
                             OrderTakeProfit(), 0, clrBlue))
                {
                    Print("ðŸŽ¯ Break-even secured!");
                }
            }
        }
    }
}